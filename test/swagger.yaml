---
swagger: "2.0"
info:
  description: "Share data on IoT world with the senshub API"
  version: "0.1.0"
  title: "senshub REST API"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: "162.248.164.74:8080"
basePath: "/api/0.1.0"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

# Security
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: query

paths:
  # Users
  /users/{userid}:
    get:
      tags:
      - User
      summary: "Read User registered to *senshub*."
      description: "The User endpoint returns information about the *Senshub* user.\n\
        The response includes the display name and other details about the user.\n"
      operationId: "controllers.users.get_by_id"
      parameters:
      - name: "userid"
        in: "path"
        description: "Unique User Id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns information about the user"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "Returned if the user doesn't exist."
        422:
          description: "If you try to read information about a user that exists
            but he's not fully enabled."
    put:
      tags:
      - User
      summary: "Create a new User in *senshub*."
      description: "This endpoint create a new user on *senshub*. The User Id must\
        \ be unique. \nIf the creation finish successfully, an email will be sent\
        \ to the user as confirmation.\n"
      operationId: "controllers.users.create"
      parameters:
      - name: "userid"
        in: "path"
        description: "Unique User Id."
        required: true
        type: "string"
      - name: "user"
        in: "body"
        description: "User informations."
        required: true
        schema:
          $ref: "#/definitions/UserCreate"
      responses:
        204:
          description: "User registration confirmed but missing confirmation."
        400:
          description: "Bad Request error"
        409:
          description: "If you try to create a user and the {userid} is
            already used by another user."

  /users/{userid}/email:
    put:
      tags:
      - User
      summary: "Confirm the user by passing the confirmation token."
      description: "This endopoit is used to fully enable the user after he
        required to subscribe. The system send a confirmation token by email.
        After the first try, the token expire and another token should be
        asked to confirm the user."
      operationId: "controllers.users.confirm"
      parameters:
      - name: "userid"
        in: "path"
        description: "Unique User Id."
        required: true
        type: "string"
      - name: "confirmation"
        in: "query"
        description: "Contains the confirmation token."
        required: true
        type: string
      responses:
        204:
          description: "User registration fully confirmed."
        400:
          description: "Bad Request error."
        401:
          description: "The token provided is wrong or user already confirmed."

